#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.33440
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DemoProjectApplication2
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Database1")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCategory1(Category1 instance);
    partial void UpdateCategory1(Category1 instance);
    partial void DeleteCategory1(Category1 instance);
    partial void InsertGames_table(Games_table instance);
    partial void UpdateGames_table(Games_table instance);
    partial void DeleteGames_table(Games_table instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::DemoProjectApplication2.Properties.Settings.Default.Database1ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Admin> Admins
		{
			get
			{
				return this.GetTable<Admin>();
			}
		}
		
		public System.Data.Linq.Table<Category1> Category1s
		{
			get
			{
				return this.GetTable<Category1>();
			}
		}
		
		public System.Data.Linq.Table<Games_table> Games_tables
		{
			get
			{
				return this.GetTable<Games_table>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Admin")]
	public partial class Admin
	{
		
		private string _username;
		
		private string _password;
		
		public Admin()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="VarChar(MAX)")]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this._username = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="VarChar(MAX)")]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this._password = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Category1")]
	public partial class Category1 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _genre;
		
		private EntitySet<Games_table> _Games_tables;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OngenreChanging(string value);
    partial void OngenreChanged();
    #endregion
		
		public Category1()
		{
			this._Games_tables = new EntitySet<Games_table>(new Action<Games_table>(this.attach_Games_tables), new Action<Games_table>(this.detach_Games_tables));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_genre", DbType="VarChar(MAX)")]
		public string genre
		{
			get
			{
				return this._genre;
			}
			set
			{
				if ((this._genre != value))
				{
					this.OngenreChanging(value);
					this.SendPropertyChanging();
					this._genre = value;
					this.SendPropertyChanged("genre");
					this.OngenreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Category1_Games_table", Storage="_Games_tables", ThisKey="Id", OtherKey="genre_id")]
		public EntitySet<Games_table> Games_tables
		{
			get
			{
				return this._Games_tables;
			}
			set
			{
				this._Games_tables.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Games_tables(Games_table entity)
		{
			this.SendPropertyChanging();
			entity.Category1 = this;
		}
		
		private void detach_Games_tables(Games_table entity)
		{
			this.SendPropertyChanging();
			entity.Category1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Games_table")]
	public partial class Games_table : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _name;
		
		private string _os;
		
		private string _processor;
		
		private string _ram;
		
		private string _gpu;
		
		private string _directx;
		
		private string _hdd;
		
		private string _release;
		
		private string _genre_type;
		
		private System.Nullable<int> _genre_id;
		
		private string _image;
		
		private EntityRef<Category1> _Category1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnosChanging(string value);
    partial void OnosChanged();
    partial void OnprocessorChanging(string value);
    partial void OnprocessorChanged();
    partial void OnramChanging(string value);
    partial void OnramChanged();
    partial void OngpuChanging(string value);
    partial void OngpuChanged();
    partial void OndirectxChanging(string value);
    partial void OndirectxChanged();
    partial void OnhddChanging(string value);
    partial void OnhddChanged();
    partial void OnreleaseChanging(string value);
    partial void OnreleaseChanged();
    partial void Ongenre_typeChanging(string value);
    partial void Ongenre_typeChanged();
    partial void Ongenre_idChanging(System.Nullable<int> value);
    partial void Ongenre_idChanged();
    partial void OnimageChanging(string value);
    partial void OnimageChanged();
    #endregion
		
		public Games_table()
		{
			this._Category1 = default(EntityRef<Category1>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(MAX)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_os", DbType="VarChar(MAX)")]
		public string os
		{
			get
			{
				return this._os;
			}
			set
			{
				if ((this._os != value))
				{
					this.OnosChanging(value);
					this.SendPropertyChanging();
					this._os = value;
					this.SendPropertyChanged("os");
					this.OnosChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_processor", DbType="VarChar(MAX)")]
		public string processor
		{
			get
			{
				return this._processor;
			}
			set
			{
				if ((this._processor != value))
				{
					this.OnprocessorChanging(value);
					this.SendPropertyChanging();
					this._processor = value;
					this.SendPropertyChanged("processor");
					this.OnprocessorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ram", DbType="VarChar(MAX)")]
		public string ram
		{
			get
			{
				return this._ram;
			}
			set
			{
				if ((this._ram != value))
				{
					this.OnramChanging(value);
					this.SendPropertyChanging();
					this._ram = value;
					this.SendPropertyChanged("ram");
					this.OnramChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gpu", DbType="VarChar(MAX)")]
		public string gpu
		{
			get
			{
				return this._gpu;
			}
			set
			{
				if ((this._gpu != value))
				{
					this.OngpuChanging(value);
					this.SendPropertyChanging();
					this._gpu = value;
					this.SendPropertyChanged("gpu");
					this.OngpuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_directx", DbType="VarChar(MAX)")]
		public string directx
		{
			get
			{
				return this._directx;
			}
			set
			{
				if ((this._directx != value))
				{
					this.OndirectxChanging(value);
					this.SendPropertyChanging();
					this._directx = value;
					this.SendPropertyChanged("directx");
					this.OndirectxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hdd", DbType="VarChar(MAX)")]
		public string hdd
		{
			get
			{
				return this._hdd;
			}
			set
			{
				if ((this._hdd != value))
				{
					this.OnhddChanging(value);
					this.SendPropertyChanging();
					this._hdd = value;
					this.SendPropertyChanged("hdd");
					this.OnhddChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_release", DbType="VarChar(MAX)")]
		public string release
		{
			get
			{
				return this._release;
			}
			set
			{
				if ((this._release != value))
				{
					this.OnreleaseChanging(value);
					this.SendPropertyChanging();
					this._release = value;
					this.SendPropertyChanged("release");
					this.OnreleaseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_genre_type", DbType="VarChar(MAX)")]
		public string genre_type
		{
			get
			{
				return this._genre_type;
			}
			set
			{
				if ((this._genre_type != value))
				{
					this.Ongenre_typeChanging(value);
					this.SendPropertyChanging();
					this._genre_type = value;
					this.SendPropertyChanged("genre_type");
					this.Ongenre_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_genre_id", DbType="Int")]
		public System.Nullable<int> genre_id
		{
			get
			{
				return this._genre_id;
			}
			set
			{
				if ((this._genre_id != value))
				{
					if (this._Category1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ongenre_idChanging(value);
					this.SendPropertyChanging();
					this._genre_id = value;
					this.SendPropertyChanged("genre_id");
					this.Ongenre_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_image", DbType="VarChar(MAX)")]
		public string image
		{
			get
			{
				return this._image;
			}
			set
			{
				if ((this._image != value))
				{
					this.OnimageChanging(value);
					this.SendPropertyChanging();
					this._image = value;
					this.SendPropertyChanged("image");
					this.OnimageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Category1_Games_table", Storage="_Category1", ThisKey="genre_id", OtherKey="Id", IsForeignKey=true)]
		public Category1 Category1
		{
			get
			{
				return this._Category1.Entity;
			}
			set
			{
				Category1 previousValue = this._Category1.Entity;
				if (((previousValue != value) 
							|| (this._Category1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Category1.Entity = null;
						previousValue.Games_tables.Remove(this);
					}
					this._Category1.Entity = value;
					if ((value != null))
					{
						value.Games_tables.Add(this);
						this._genre_id = value.Id;
					}
					else
					{
						this._genre_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Category1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
